

# Flipkart Mobile Phones Data Scraper

## Overview
This Python script scrapes data about mobile phones listed under ₹20,000 from Flipkart's website. It extracts details such as the phone name, price, ratings, and descriptions, and saves the data into a CSV file for further analysis.

### Features
- Scrapes multiple pages of search results (up to 10 pages).
- Extracts key details: **Names**, **Prices**, **Ratings**, and **Descriptions**.
- Handles mismatched data lengths to ensure a clean DataFrame.
- Saves the scraped data into a CSV file.

---

## Requirements

### Prerequisites
Before running the script, ensure you have the following installed:
1. **Python 3.x**: The script is written in Python 3.
2. **Required Libraries**:
   - `requests`: For making HTTP requests.
   - `beautifulsoup4`: For parsing HTML content.
   - `pandas`: For creating and saving the DataFrame.

You can install the required libraries using the following command:
```bash
pip install requests beautifulsoup4 pandas lxml
```

---

## How to Run the Script

1. **Clone or Download the Script**:
   - Save the Python script (`flipkart_scraper.py`) to your local machine.

2. **Set Up the Environment**:
   - Ensure all required libraries are installed (see "Requirements" above).

3. **Run the Script**:
   Execute the script using the following command:
   ```bash
   python flipkart_scraper.py
   ```

4. **Output**:
   - The script will scrape data from Flipkart and save it to a CSV file located at:
     ```
     E:\flipkart scrap\mobile_phones_under_20000.csv
     ```
   - If the directory does not exist, create it before running the script.

---

## Folder Structure

The project directory should look like this:
```
project-folder/
│
├── flipkart_scraper.py       # Main Python script
├── README.md                 # This file
└── E:/flipkart scrap/        # Directory to store the output CSV file
    └── mobile_phones_under_20000.csv
```

---

## Code Explanation

### Key Components
1. **Web Scraping**:
   - The script uses `requests` to fetch the HTML content of Flipkart's search result pages.
   - `BeautifulSoup` parses the HTML and extracts data using specific class names.

2. **Pagination**:
   - The script iterates through up to 10 pages of search results by appending the `page` parameter to the URL.

3. **Data Cleaning**:
   - Ensures all lists (`names`, `prices`, `ratings`, `descriptions`) have the same length before creating the DataFrame.

4. **Saving Data**:
   - The extracted data is saved into a CSV file using `pandas`.

---

## Notes and Limitations

1. **Dynamic Class Names**:
   - Flipkart frequently updates its website, which may change the HTML structure and class names. If the script stops working, inspect the page source and update the class names in the code.

2. **Rate Limiting**:
   - Frequent requests to Flipkart's servers may trigger rate limiting or IP blocking. To avoid this:
     - Add delays between requests using `time.sleep(seconds)`.
     - Use a proxy or rotate user agents.

3. **Missing Data**:
   - Some products may not have ratings or descriptions. The script handles this by truncating lists to the shortest length.

4. **File Path**:
   - Ensure the output directory (`E:\flipkart scrap`) exists. If not, modify the file path in the script to a valid location.

---

## Example Output

The output CSV file (`mobile_phones_under_20000.csv`) will look like this:

| Names               | Prices   | Ratings | Descriptions                     |
|---------------------|----------|---------|----------------------------------|
| Samsung Galaxy M32  | ₹19,999  | 4.5     | 6 GB RAM, 128 GB ROM, Octa Core... |
| Redmi Note 11 Pro   | ₹17,999  | 4.3     | 8 GB RAM, 128 GB ROM, AMOLED Display... |
| OnePlus Nord CE 2   | ₹18,999  | 4.4     | 12 GB RAM, 256 GB ROM, Snapdragon... |

---

## License

This project is licensed under the MIT License. Feel free to use, modify, and distribute the code as needed.

---

## Contact

If you have any questions or need assistance, feel free to reach out:
- Email: [your-email@example.com]
- GitHub: [your-github-profile]

---
